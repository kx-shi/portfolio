{"ast":null,"code":"var _jsxFileName = \"/home/kx-shi/PortfolioDemo/src/components/projects/SteammindPage.js\";\nimport React, { Component } from 'react';\nimport '../../styles/projectpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SteammindPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-grey\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"page-left\",\n          children: \"Steammind\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"q-one\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"keywords\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Graphical Programming\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"DSP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Pure Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"User Tests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Software\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"q-one\",\n          alt: \"datatonism\",\n          src: require(\"../../assets/projects/steammind/steammind-thumbnail.png\"),\n          width: \"600\",\n          height: \"450\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Datatonism is the result of a course project done in the course DT2213 Musical Communication and Music Technology. It is a digital emulation of the Dataton System 3000 designed by Bj\\xF6rn Sandlund in the 1970's. The Dataton System is a modular synthesizer made up of rectangular modular that slot together sideways like LEGO pieces. The The project was an interesting insight about the fundamental differences between digital and analog systems. Apart from that, it was also a great exercise in learning more digital signal processing.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/kx-shi/Datatonism\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"Datatonism on GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","SteammindPage","render","require"],"sources":["/home/kx-shi/PortfolioDemo/src/components/projects/SteammindPage.js"],"sourcesContent":["import React, { Component } from 'react';\nimport '../../styles/projectpage.css';\n\nexport default class SteammindPage extends Component{\n    render() {\n        return (\n            <div class=\"container-grey\">\n                <div className=\"project-grid\">\n                    <h1 className=\"page-left\">Steammind</h1>\n                    <div className=\"q-one\">\n                        <ul className=\"keywords\">\n                            <li>Graphical Programming</li>\n                            <li>DSP</li>\n                            <li>Pure Data</li>\n                            <li>User Tests</li>\n                            <li>Software</li>\n                        </ul>\n                    </div>\n                    <img className=\"q-one\" alt=\"datatonism\" src={require(\"../../assets/projects/steammind/steammind-thumbnail.png\")}  width=\"600\" height=\"450\"/>\n                    <p>\n                        Datatonism is the result of a course project done in the course DT2213 Musical Communication and Music Technology. It is a digital emulation of the Dataton System 3000\n                        designed by Bj√∂rn Sandlund in the 1970's. The Dataton System is a modular synthesizer made up of rectangular modular that slot together sideways like LEGO pieces. The \n                        The project was an interesting insight about the fundamental differences between digital and analog systems.\n                        Apart from that, it was also a great exercise in learning more digital signal processing.\n                    </p>\n                    <a href=\"https://github.com/kx-shi/Datatonism\" target=\"_blank\" rel=\"noreferrer\">Datatonism on GitHub</a>\n                </div>\n            </div>\n        );\n    };\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,8BAA8B;AAAC;AAEtC,eAAe,MAAMC,aAAa,SAASD,SAAS;EAChDE,MAAM,GAAG;IACL,oBACI;MAAK,KAAK,EAAC,gBAAgB;MAAA,uBACvB;QAAK,SAAS,EAAC,cAAc;QAAA,wBACzB;UAAI,SAAS,EAAC,WAAW;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK,eACxC;UAAK,SAAS,EAAC,OAAO;UAAA,uBAClB;YAAI,SAAS,EAAC,UAAU;YAAA,wBACpB;cAAA,UAAI;YAAqB;cAAA;cAAA;cAAA;YAAA,QAAK,eAC9B;cAAA,UAAI;YAAG;cAAA;cAAA;cAAA;YAAA,QAAK,eACZ;cAAA,UAAI;YAAS;cAAA;cAAA;cAAA;YAAA,QAAK,eAClB;cAAA,UAAI;YAAU;cAAA;cAAA;cAAA;YAAA,QAAK,eACnB;cAAA,UAAI;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QAChB;UAAA;UAAA;UAAA;QAAA,QACH,eACN;UAAK,SAAS,EAAC,OAAO;UAAC,GAAG,EAAC,YAAY;UAAC,GAAG,EAAEC,OAAO,CAAC,yDAAyD,CAAE;UAAE,KAAK,EAAC,KAAK;UAAC,MAAM,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAE,eAC5I;UAAA,UAAG;QAKH;UAAA;UAAA;UAAA;QAAA,QAAI,eACJ;UAAG,IAAI,EAAC,sCAAsC;UAAC,MAAM,EAAC,QAAQ;UAAC,GAAG,EAAC,YAAY;UAAA,UAAC;QAAoB;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA;IACtG;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}